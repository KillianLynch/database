-- Healthcare ID domain for consistent patient/encounter IDs
CREATE DOMAIN IF NOT EXISTS healthcare_id AS NUMBER 
  CONSTRAINT healthcare_id_positive CHECK (healthcare_id > 0)
  ANNOTATIONS (
    data_classification 'Primary identifier for healthcare entities',
    retention_policy '7 years post last interaction'
  );

-- Personal name domain with proper constraints
CREATE DOMAIN IF NOT EXISTS person_name AS VARCHAR2(100) 
  CONSTRAINT name_not_empty CHECK (TRIM(person_name) IS NOT NULL)
  CONSTRAINT name_length CHECK (LENGTH(TRIM(person_name)) >= 2)
  ANNOTATIONS (
    data_classification 'PII - Personal Name',
    gdpr_compliant 'Subject to right of erasure'
  );

-- Clinical note domain with size limits
CREATE DOMAIN IF NOT EXISTS clinical_text AS CLOB
  CONSTRAINT clinical_text_not_empty CHECK (clinical_text IS NOT NULL)
  ANNOTATIONS (
    data_classification 'Protected Health Information (PHI)',
    hipaa_compliant 'Contains clinical observations and treatments',
    retention_policy 'Minimum 7 years, varies by jurisdiction'
  );

-- Medical status domain
CREATE DOMAIN IF NOT EXISTS medical_status AS VARCHAR2(30)
  CONSTRAINT valid_status CHECK (medical_status IN (
    'Scheduled', 'In Progress', 'Completed', 'Cancelled', 
    'No-Show', 'Rescheduled', 'Emergency'
  ))
  ANNOTATIONS (
    data_classification 'Medical workflow status',
    business_rule 'Drives clinical workflow automation'
  );

-- Gender domain with modern inclusive values
CREATE DOMAIN IF NOT EXISTS gender_type AS VARCHAR2(20)
  CONSTRAINT valid_gender CHECK (gender_type IN (
    'Male', 'Female', 'Non-binary', 'Other', 'Prefer not to say', 'Unknown'
  ))
  ANNOTATIONS (
    data_classification 'Demographic information',
    sensitivity_level 'Medium'
  );

-- Create patients table
CREATE TABLE IF NOT EXISTS patients (
  id                healthcare_id GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name              person_name NOT NULL,
  dob               DATE,
  sex               gender_type,
  primary_reason    VARCHAR2(200),
  created_at        TIMESTAMP DEFAULT SYSTIMESTAMP,
  last_updated      TIMESTAMP DEFAULT SYSTIMESTAMP,
  -- Virtual columns (23ai enhanced support for up to 4096 columns)
  full_name_upper   VARCHAR2(100) GENERATED ALWAYS AS (
    UPPER(name)
  ) VIRTUAL
) 
ANNOTATIONS (
  hipaa_compliant 'Core patient demographics',
  data_classification 'Highly sensitive PII',
  business_purpose 'Patient identity and demographic tracking',
  table_comment 'Patient master data with HIPAA compliance'
);

-- Create appointments table
CREATE TABLE IF NOT EXISTS appointments (
  id                healthcare_id GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  patient_id        healthcare_id NOT NULL,
  start_time        TIMESTAMP NOT NULL,
  end_time          TIMESTAMP GENERATED ALWAYS AS (
    start_time + INTERVAL '30' MINUTE
  ) VIRTUAL,
  reason            VARCHAR2(200),
  status            medical_status DEFAULT 'Scheduled',
  created_at        TIMESTAMP DEFAULT SYSTIMESTAMP,
  provider_name     person_name DEFAULT 'Dr. Rivera',
  -- Native JSON column showcasing Oracle 23ai capabilities
  appointment_data  JSON,
  CONSTRAINT appointments_patient_fk FOREIGN KEY (patient_id) 
    REFERENCES patients(id) ON DELETE CASCADE
)
ANNOTATIONS (
  business_purpose 'Healthcare appointment scheduling and tracking',
  data_retention '5 years post appointment',
  audit_required 'Yes - track all status changes',
  json_features 'Utilizes Oracle 23ai native JSON type with OSON storage'
);

-- Multi-column domain for vital signs
CREATE DOMAIN IF NOT EXISTS vital_signs AS (
  systolic_bp    AS NUMBER,
  diastolic_bp   AS NUMBER,
  heart_rate     AS NUMBER,
  temperature    AS NUMBER,
  recorded_at    AS TIMESTAMP
)
CONSTRAINT vital_signs_check CHECK (
  systolic_bp BETWEEN 70 AND 250 AND
  diastolic_bp BETWEEN 40 AND 150 AND
  heart_rate BETWEEN 30 AND 220 AND
  temperature BETWEEN 95.0 AND 110.0
)
ANNOTATIONS (
  data_classification 'Protected Health Information (PHI)',
  clinical_significance 'Core vital signs for patient monitoring',
  validation_rules 'Enforces medically reasonable ranges'
);

-- Create table using the multi-column domain
CREATE TABLE patient_vitals (
  id           healthcare_id GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  patient_id   healthcare_id NOT NULL,
  systolic_bp  NUMBER,
  diastolic_bp NUMBER,
  heart_rate   NUMBER,
  temperature  NUMBER,
  recorded_at  TIMESTAMP DEFAULT SYSTIMESTAMP,
  recorded_by  person_name NOT NULL,
  DOMAIN vital_signs(systolic_bp, diastolic_bp, heart_rate, temperature, recorded_at),
  CONSTRAINT patient_vitals_fk FOREIGN KEY (patient_id) REFERENCES patients(id)
)
ANNOTATIONS (
  clinical_purpose 'Patient vital signs monitoring',
  hipaa_compliant 'Contains PHI - vital signs measurements'
);

-- Insert base patients
INSERT INTO patients (name, dob, sex, primary_reason) 
VALUES ('Courtney Henry', DATE '1988-06-10', 'Female', 'Knee rehab follow-up');

INSERT INTO patients (name, dob, sex, primary_reason) 
VALUES ('Ronald Richards', DATE '1982-02-01', 'Male', 'Back-to-running check-in');

INSERT INTO patients (name, dob, sex, primary_reason) 
VALUES ('Leslie Alexander', DATE '1976-11-03', 'Female', 'Blood pressure review');

-- Sarah Johnson and Alex Chen patients from the first lab
INSERT INTO patients (name, dob, sex, primary_reason) 
VALUES ('Sarah Johnson', DATE '1985-03-15', 'Female', 'Annual checkup');

INSERT INTO patients (name, dob, sex, primary_reason) 
VALUES ('Alex Chen', DATE '1992-07-22', 'Non-binary', 'Follow-up consultation');

-- APPOINTMENTS FOR COURTNEY HENRY (Patient ID 1 - Knee Rehab)
-- Initial knee rehab follow-up appointment
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (1, TIMESTAMP '2025-08-12 09:30:00', 'Knee rehab progress evaluation', 'Completed', 'Dr. Jennifer Park',
        JSON('{"appointmentType": "orthopedic", "duration": 45, "specialty": "sports medicine", "followUpWeeks": 6, "painLevel": 3, "mobilityImprovement": true}'));

-- Physical therapy session
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (1, TIMESTAMP '2025-08-15 14:00:00', 'Physical therapy session', 'Completed', 'Mike Thompson, PT',
        JSON('{"appointmentType": "physicalTherapy", "duration": 60, "exercisesFocused": ["quad strengthening", "range of motion"], "homeExerciseUpdate": true}'));

-- Follow-up orthopedic visit
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (1, TIMESTAMP '2025-08-22 10:15:00', 'Knee function assessment', 'Scheduled', 'Dr. Jennifer Park',
        JSON('{"appointmentType": "orthopedic", "duration": 30, "imagingNeeded": false, "returnToActivityDiscussion": true}'));

-- Upcoming PT session
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (1, TIMESTAMP '2025-08-26 15:30:00', 'Advanced strengthening exercises', 'Scheduled', 'Mike Thompson, PT',
        JSON('{"appointmentType": "physicalTherapy", "duration": 60, "phase": "strengthening", "sportSpecificTraining": true}'));

-- APPOINTMENTS FOR RONALD RICHARDS (Patient ID 2 - Running Assessment)
-- Running gait analysis
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (2, TIMESTAMP '2025-08-09 08:00:00', 'Running gait analysis and biomechanics', 'Completed', 'Dr. Sarah Kim',
        JSON('{"appointmentType": "sportsMedicine", "duration": 60, "gaitAnalysis": true, "videoAnalysis": true, "currentMileage": 25, "goalMileage": 40}'));

-- Podiatry consultation
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (2, TIMESTAMP '2025-08-14 11:45:00', 'Foot mechanics and shoe fitting', 'Completed', 'Dr. Michael Torres, DPM',
        JSON('{"appointmentType": "podiatry", "duration": 45, "footScan": true, "shoeRecommendation": "motion control", "customOrthotics": false}'));

-- Sports medicine follow-up
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (2, TIMESTAMP '2025-08-21 16:30:00', 'Training plan optimization', 'Scheduled', 'Dr. Sarah Kim',
        JSON('{"appointmentType": "sportsMedicine", "duration": 30, "trainingPlanReview": true, "injuryPrevention": true, "racePreparation": "10K"}'));

-- Nutrition consultation
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (2, TIMESTAMP '2025-08-28 13:00:00', 'Sports nutrition and hydration', 'Scheduled', 'Lisa Chen, RD',
        JSON('{"appointmentType": "nutrition", "duration": 45, "focus": "endurance nutrition", "supplementDiscussion": true, "hydratorStrategy": true}'));

-- APPOINTMENTS FOR LESLIE ALEXANDER (Patient ID 3 - Blood Pressure)
-- Blood pressure monitoring visit
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (3, TIMESTAMP '2025-08-07 10:00:00', 'Blood pressure monitoring and medication review', 'Completed', 'Dr. Rivera',
        JSON('{"appointmentType": "primaryCare", "duration": 30, "bpReading": "138/86", "medicationAdjustment": true, "homeMonitoringReview": true}'));

-- Cardiology consultation
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (3, TIMESTAMP '2025-08-16 14:30:00', 'Hypertension management consultation', 'Completed', 'Dr. Robert Chen, MD',
        JSON('{"appointmentType": "cardiology", "duration": 45, "echocardiogram": true, "arteryAssessment": true, "lifestyleModifications": true}'));

-- Dietitian appointment
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (3, TIMESTAMP '2025-08-20 09:30:00', 'DASH diet counseling', 'Scheduled', 'Maria Rodriguez, RD',
        JSON('{"appointmentType": "nutrition", "duration": 60, "dietType": "DASH", "sodiumReduction": true, "mealPlanning": true, "weightManagement": false}'));

-- Follow-up BP check
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name, appointment_data)
VALUES (3, TIMESTAMP '2025-08-30 08:45:00', 'Blood pressure recheck', 'Scheduled', 'Dr. Rivera',
        JSON('{"appointmentType": "primaryCare", "duration": 15, "bpRecheck": true, "medicationEffectiveness": true, "homeLogReview": true}'));

-- Insert valid appointment from the first lab
INSERT INTO appointments (patient_id, start_time, reason, status, provider_name)
VALUES (4, TIMESTAMP '2025-02-15 10:00:00', 'Routine physical', 'Scheduled', 'Dr. Martinez');

-- Valid vital signs
INSERT INTO patient_vitals (patient_id, systolic_bp, diastolic_bp, heart_rate, temperature, recorded_by)
VALUES (1, 120, 80, 72, 98.6, 'Nurse Johnson');

-- Index for fast appointment type queries
CREATE INDEX idx_appointment_type ON appointments (
    JSON_VALUE(appointment_data, '$.appointmentType')
);

-- Index for duration-based queries
CREATE INDEX idx_appointment_duration ON appointments (
    JSON_VALUE(appointment_data, '$.duration' RETURNING NUMBER)
);

-- Ensure appointment_data always has appointmentType
ALTER TABLE appointments ADD CONSTRAINT appointment_data_required
CHECK (JSON_EXISTS(appointment_data, '$.appointmentType') = 1 OR appointment_data IS NULL);

-- Ensure duration is a positive number when present
ALTER TABLE appointments ADD CONSTRAINT appointment_duration_valid
CHECK (
    JSON_VALUE(appointment_data, '$.duration' RETURNING NUMBER) IS NULL OR
    JSON_VALUE(appointment_data, '$.duration' RETURNING NUMBER) > 0
);

COMMIT;